{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vuyo\\\\Desktop\\\\Computer Science\\\\Final Project\\\\no_code_deep_learning_web_app\\\\src\\\\components\\\\DataUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { uploadData } from './api';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataUpload({\n  setDataUploaded\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState('');\n  const fileInputRef = useRef(null);\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile && droppedFile.name.endsWith('.csv')) {\n      setFile(droppedFile);\n      setMessage(`File selected: ${droppedFile.name}`);\n    } else {\n      setMessage('Only CSV files are accepted');\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.name.endsWith('.csv')) {\n      setFile(selectedFile);\n      setMessage(`File selected: ${selectedFile.name}`);\n    } else {\n      setMessage('Only CSV files are accepted');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setMessage('Please select a file to upload');\n      return;\n    }\n    try {\n      setUploading(true);\n      setMessage('');\n      await uploadData(file, event => {\n        setProgress(Math.round(100 * event.loaded / event.total));\n      });\n      setMessage('File uploaded successfully');\n      setDataUploaded(true); // Notify the App component that data is uploaded\n    } catch (error) {\n      setMessage(`Error uploading file: ${error.message}`);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataUpload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Data Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-drop-area\",\n      onDrop: handleDrop,\n      onDragOver: e => e.preventDefault(),\n      onClick: openFileDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop a CSV file here, or click to select a file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        },\n        accept: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"file-info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\",\n      children: [progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }, this), message && !file && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: uploading || !file,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(DataUpload, \"K8jltn073E5Ge5B929BafH7bNrk=\");\n_c = DataUpload;\nexport default DataUpload;\nvar _c;\n$RefreshReg$(_c, \"DataUpload\");","map":{"version":3,"names":["React","useState","useRef","uploadData","jsxDEV","_jsxDEV","DataUpload","setDataUploaded","_s","file","setFile","uploading","setUploading","progress","setProgress","message","setMessage","fileInputRef","handleDrop","e","preventDefault","stopPropagation","droppedFile","dataTransfer","files","name","endsWith","handleFileChange","selectedFile","target","handleSubmit","event","Math","round","loaded","total","error","openFileDialog","current","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onClick","type","ref","onChange","style","display","accept","value","max","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Vuyo/Desktop/Computer Science/Final Project/no_code_deep_learning_web_app/src/components/DataUpload.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { uploadData } from './api';\nimport '../styles/App.css';\n\nfunction DataUpload({ setDataUploaded }) {\n    const [file, setFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [message, setMessage] = useState('');\n    const fileInputRef = useRef(null);\n\n    const handleDrop = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const droppedFile = e.dataTransfer.files[0];\n        if (droppedFile && droppedFile.name.endsWith('.csv')) {\n            setFile(droppedFile);\n            setMessage(`File selected: ${droppedFile.name}`);\n        } else {\n            setMessage('Only CSV files are accepted');\n        }\n    };\n\n    const handleFileChange = (e) => {\n        const selectedFile = e.target.files[0];\n        if (selectedFile && selectedFile.name.endsWith('.csv')) {\n            setFile(selectedFile);\n            setMessage(`File selected: ${selectedFile.name}`);\n        } else {\n            setMessage('Only CSV files are accepted');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!file) {\n            setMessage('Please select a file to upload');\n            return;\n        }\n        try {\n            setUploading(true);\n            setMessage('');\n            await uploadData(file, (event) => {\n                setProgress(Math.round((100 * event.loaded) / event.total));\n            });\n            setMessage('File uploaded successfully');\n            setDataUploaded(true); // Notify the App component that data is uploaded\n        } catch (error) {\n            setMessage(`Error uploading file: ${error.message}`);\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    const openFileDialog = () => {\n        fileInputRef.current.click();\n    }\n\n    return (\n        <div className=\"DataUpload\">\n            <h2 className=\"section-title\">Data Upload</h2>\n            <div className=\"drag-drop-area\" \n                 onDrop={handleDrop} \n                 onDragOver={(e) => e.preventDefault()}\n                 onClick={openFileDialog}>\n                <p>Drag and drop a CSV file here, or click to select a file</p>\n                <input type=\"file\" \n                       ref={fileInputRef}\n                       onChange={handleFileChange} \n                       style={{ display: 'none' }} \n                       accept=\".csv\" />\n            </div>\n            {file && <p className=\"file-info\">{message}</p>}\n            {uploading && <progress value={progress} max=\"100\">{progress}%</progress>}\n            {message && !file && <p className=\"message\">{message}</p>}\n            <button onClick={handleSubmit} disabled={uploading || !file}>Upload</button>\n        </div>\n    );\n}\n\nexport default DataUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}