{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vuyo\\\\Desktop\\\\Computer Science\\\\Final Project\\\\no_code_deep_learning_web_app\\\\src\\\\components\\\\DataVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataVisualization() {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/data');\n        if (!response.ok) throw new Error('Data fetch failed');\n        const data = await response.json();\n        setChartData(transformDataForChart(data));\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const transformDataForChart = data => {\n    // Transform data into a format suitable for Chart.js\n    // This is an example transformation. Adapt based on actual data structure.\n    return {\n      labels: data.labels,\n      datasets: [{\n        label: 'Dataset',\n        data: data.values,\n        fill: false,\n        backgroundColor: 'rgb(75, 192, 192)',\n        borderColor: 'rgba(75, 192, 192, 0.2)'\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataVisualization\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(DataVisualization, \"brzxmrYfkhx/oScAUmuHUa40fUE=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","DataVisualization","_s","chartData","setChartData","loading","setLoading","fetchData","response","fetch","ok","Error","data","json","transformDataForChart","error","console","labels","datasets","label","values","fill","backgroundColor","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vuyo/Desktop/Computer Science/Final Project/no_code_deep_learning_web_app/src/components/DataVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction DataVisualization() {\n    const [chartData, setChartData] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch('/api/data');\n                if (!response.ok) throw new Error('Data fetch failed');\n\n                const data = await response.json();\n                setChartData(transformDataForChart(data));\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const transformDataForChart = (data) => {\n        // Transform data into a format suitable for Chart.js\n        // This is an example transformation. Adapt based on actual data structure.\n        return {\n            labels: data.labels,\n            datasets: [\n                {\n                    label: 'Dataset',\n                    data: data.values,\n                    fill: false,\n                    backgroundColor: 'rgb(75, 192, 192)',\n                    borderColor: 'rgba(75, 192, 192, 0.2)',\n                },\n            ],\n        };\n    };\n\n    return (\n        <div className=\"DataVisualization\">\n            {loading ? (\n                <p>Loading data...</p>\n            ) : (\n                <Line data={chartData} />\n            )}\n        </div>\n    );\n}\n\nexport default DataVisualization;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;QACzC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;QAEtD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,YAAY,CAACU,qBAAqB,CAACF,IAAI,CAAC,CAAC;QACzCN,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CT,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,qBAAqB,GAAIF,IAAI,IAAK;IACpC;IACA;IACA,OAAO;MACHK,MAAM,EAAEL,IAAI,CAACK,MAAM;MACnBC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,SAAS;QAChBP,IAAI,EAAEA,IAAI,CAACQ,MAAM;QACjBC,IAAI,EAAE,KAAK;QACXC,eAAe,EAAE,mBAAmB;QACpCC,WAAW,EAAE;MACjB,CAAC;IAET,CAAC;EACL,CAAC;EAED,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC7BpB,OAAO,gBACJL,OAAA;MAAAyB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtB7B,OAAA,CAACF,IAAI;MAACc,IAAI,EAAET;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC3B,EAAA,CAhDQD,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAkD1B,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}