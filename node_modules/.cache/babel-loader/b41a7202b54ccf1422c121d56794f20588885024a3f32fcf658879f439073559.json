{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vuyo\\\\Desktop\\\\Computer Science\\\\Final Project\\\\no_code_deep_learning_web_app\\\\src\\\\components\\\\DataSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSummaryData } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DataSummary({\n  dataUploaded\n}) {\n  _s();\n  const [summaryData, setSummaryData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (!dataUploaded) {\n      setSummaryData(null);\n      setError('');\n      return;\n    }\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError('');\n      try {\n        const data = await getSummaryData();\n        if (data && data.columns) {\n          setSummaryData(data);\n        } else {\n          throw new Error('No summary data available');\n        }\n      } catch (error) {\n        console.error('Error fetching data summary:', error);\n        setError('Error fetching data summary');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [dataUploaded]);\n  const renderSummary = () => {\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data summary...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this);\n    if (!summaryData || !summaryData.columns) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data summary available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 58\n    }, this);\n    return summaryData.columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: column\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), summaryData.summary[column] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data Type: \", summaryData.summary[column].dataType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Missing Values: \", summaryData.summary[column].missing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Percentage Missing: \", summaryData.summary[column].percentMissing, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataSummary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), !dataUploaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please upload a data file to view the summary.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : renderSummary()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(DataSummary, \"KeuXrR2ucv+iSalG7YDI0D50OFs=\");\n_c = DataSummary;\nexport default DataSummary;\nvar _c;\n$RefreshReg$(_c, \"DataSummary\");","map":{"version":3,"names":["React","useState","useEffect","getSummaryData","jsxDEV","_jsxDEV","Fragment","_Fragment","DataSummary","dataUploaded","_s","summaryData","setSummaryData","isLoading","setIsLoading","error","setError","fetchData","data","columns","Error","console","renderSummary","children","fileName","_jsxFileName","lineNumber","columnNumber","map","column","index","summary","dataType","missing","percentMissing","className","_c","$RefreshReg$"],"sources":["C:/Users/Vuyo/Desktop/Computer Science/Final Project/no_code_deep_learning_web_app/src/components/DataSummary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSummaryData } from './api';\r\n\r\nfunction DataSummary({ dataUploaded }) {\r\n    const [summaryData, setSummaryData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!dataUploaded) {\r\n            setSummaryData(null);\r\n            setError('');\r\n            return;\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            setIsLoading(true);\r\n            setError('');\r\n            try {\r\n                const data = await getSummaryData();\r\n                if (data && data.columns) {\r\n                    setSummaryData(data);\r\n                } else {\r\n                    throw new Error('No summary data available');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data summary:', error);\r\n                setError('Error fetching data summary');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [dataUploaded]);\r\n\r\n    const renderSummary = () => {\r\n        if (isLoading) return <p>Loading data summary...</p>;\r\n        if (error) return <p>{error}</p>;\r\n        if (!summaryData || !summaryData.columns) return <p>No data summary available.</p>;\r\n\r\n        return summaryData.columns.map((column, index) => (\r\n            <div key={index}>\r\n                <h3>{column}</h3>\r\n                {/* Ensure that summary data for each column exists before attempting to access it */}\r\n                {summaryData.summary[column] && (\r\n                    <>\r\n                        <p>Data Type: {summaryData.summary[column].dataType}</p>\r\n                        <p>Missing Values: {summaryData.summary[column].missing}</p>\r\n                        <p>Percentage Missing: {summaryData.summary[column].percentMissing}%</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"DataSummary\">\r\n            <h2>Data Summary</h2>\r\n            {!dataUploaded ? (\r\n                <p>Please upload a data file to view the summary.</p>\r\n            ) : (\r\n                renderSummary()\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataSummary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}