{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vuyo\\\\Desktop\\\\Computer Science\\\\Final Project\\\\no_code_deep_learning_web_app\\\\src\\\\components\\\\DataVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { fetchPreprocessedData } from './api'; // Import the correct function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataVisualization() {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the latest preprocessed data\n        const response = await fetch('/api/preprocess', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            filename: 'latest'\n          }) // Assuming 'latest' is a placeholder for the actual latest file name\n        });\n        if (!response.ok) throw new Error('Data fetch failed');\n        const data = await response.json();\n        setChartData({\n          labels: data.labels,\n          datasets: [{\n            label: 'Dataset',\n            data: data.values,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataVisualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-title\",\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : Object.keys(chartData).length ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for visualization. Please upload and preprocess data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(DataVisualization, \"brzxmrYfkhx/oScAUmuHUa40fUE=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useState","useEffect","Line","fetchPreprocessedData","jsxDEV","_jsxDEV","DataVisualization","_s","chartData","setChartData","loading","setLoading","fetchData","response","fetch","method","headers","body","JSON","stringify","filename","ok","Error","data","json","labels","datasets","label","values","fill","borderColor","tension","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","_c","$RefreshReg$"],"sources":["C:/Users/Vuyo/Desktop/Computer Science/Final Project/no_code_deep_learning_web_app/src/components/DataVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { fetchPreprocessedData } from './api'; // Import the correct function\n\nfunction DataVisualization() {\n    const [chartData, setChartData] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch the latest preprocessed data\n                const response = await fetch('/api/preprocess', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ filename: 'latest' }) // Assuming 'latest' is a placeholder for the actual latest file name\n                });\n\n                if (!response.ok) throw new Error('Data fetch failed');\n\n                const data = await response.json();\n                setChartData({\n                    labels: data.labels,\n                    datasets: [{\n                        label: 'Dataset',\n                        data: data.values,\n                        fill: false,\n                        borderColor: 'rgb(75, 192, 192)',\n                        tension: 0.1\n                    }]\n                });\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"DataVisualization\">\n            <div className=\"section-title\">Data Visualization</div>\n            {loading ? (\n                <p>Loading data...</p>\n            ) : Object.keys(chartData).length ? (\n                <Line data={chartData} />\n            ) : (\n                <p>No data available for visualization. Please upload and preprocess data.</p>\n            )}\n        </div>\n    );\n}\n\nexport default DataVisualization;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,qBAAqB,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;UAC5CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,QAAQ,EAAE;UAAS,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC;QAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;QAEtD,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCf,YAAY,CAAC;UACTgB,MAAM,EAAEF,IAAI,CAACE,MAAM;UACnBC,QAAQ,EAAE,CAAC;YACPC,KAAK,EAAE,SAAS;YAChBJ,IAAI,EAAEA,IAAI,CAACK,MAAM;YACjBC,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,mBAAmB;YAChCC,OAAO,EAAE;UACb,CAAC;QACL,CAAC,CAAC;QACFpB,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CrB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9B9B,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtD7B,OAAO,gBACJL,OAAA;MAAA8B,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACtBC,MAAM,CAACC,IAAI,CAACjC,SAAS,CAAC,CAACkC,MAAM,gBAC7BrC,OAAA,CAACH,IAAI;MAACqB,IAAI,EAAEf;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzBlC,OAAA;MAAA8B,QAAA,EAAG;IAAuE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAChC,EAAA,CAjDQD,iBAAiB;AAAAqC,EAAA,GAAjBrC,iBAAiB;AAmD1B,eAAeA,iBAAiB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}