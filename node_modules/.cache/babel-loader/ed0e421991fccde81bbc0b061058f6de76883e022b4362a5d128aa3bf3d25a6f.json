{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vuyo\\\\Desktop\\\\Computer Science\\\\Final Project\\\\no_code_deep_learning_web_app\\\\src\\\\components\\\\DataVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { getVisualizationData, getColumns } from './api';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DataVisualization({\n  dataUploaded\n}) {\n  _s();\n  const [selectedColumn, setSelectedColumn] = useState('');\n  const [chartData, setChartData] = useState({});\n  const [columns, setColumns] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const loadColumns = async () => {\n      setLoading(true);\n      try {\n        const cols = await getColumns();\n        setColumns(cols);\n        setSelectedColumn(cols[0]);\n      } catch (error) {\n        setError('Error fetching column data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (dataUploaded) {\n      loadColumns();\n    }\n  }, [dataUploaded]);\n  useEffect(() => {\n    if (!selectedColumn) return;\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const data = await getVisualizationData(selectedColumn);\n        setChartData({\n          labels: data.labels,\n          datasets: [{\n            label: selectedColumn,\n            data: data.values,\n            backgroundColor: 'rgba(0, 123, 255, 0.5)',\n            borderColor: 'rgba(0, 123, 255, 1)',\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        setError('Error fetching visualization data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [selectedColumn]);\n  const handleChange = event => {\n    setSelectedColumn(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DataVisualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), !dataUploaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please upload a data file to visualize.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"column-select\",\n          children: \"Select a column:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"column-select\",\n          value: selectedColumn,\n          onChange: handleChange,\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: column,\n            children: column\n          }, column, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(DataVisualization, \"uqgy0Nkb3yNA6sqzI39HxBWVh8w=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useState","useEffect","Bar","getVisualizationData","getColumns","jsxDEV","_jsxDEV","Fragment","_Fragment","DataVisualization","dataUploaded","_s","selectedColumn","setSelectedColumn","chartData","setChartData","columns","setColumns","loading","setLoading","error","setError","loadColumns","cols","fetchData","data","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","handleChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","column","_c","$RefreshReg$"],"sources":["C:/Users/Vuyo/Desktop/Computer Science/Final Project/no_code_deep_learning_web_app/src/components/DataVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { getVisualizationData, getColumns } from './api';\nimport '../styles/App.css';\n\nfunction DataVisualization({ dataUploaded }) {\n    const [selectedColumn, setSelectedColumn] = useState('');\n    const [chartData, setChartData] = useState({});\n    const [columns, setColumns] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const loadColumns = async () => {\n            setLoading(true);\n            try {\n                const cols = await getColumns();\n                setColumns(cols);\n                setSelectedColumn(cols[0]);\n            } catch (error) {\n                setError('Error fetching column data');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (dataUploaded) {\n            loadColumns();\n        }\n    }, [dataUploaded]);\n\n    useEffect(() => {\n        if (!selectedColumn) return;\n\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const data = await getVisualizationData(selectedColumn);\n                setChartData({\n                    labels: data.labels,\n                    datasets: [{\n                        label: selectedColumn,\n                        data: data.values,\n                        backgroundColor: 'rgba(0, 123, 255, 0.5)',\n                        borderColor: 'rgba(0, 123, 255, 1)',\n                        borderWidth: 1\n                    }]\n                });\n            } catch (error) {\n                setError('Error fetching visualization data');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [selectedColumn]);\n\n    const handleChange = (event) => {\n        setSelectedColumn(event.target.value);\n    };\n\n    return (\n        <div className=\"DataVisualization\">\n            <h2 className=\"section-title\">Data Visualization</h2>\n            {!dataUploaded ? (\n                <p>Please upload a data file to visualize.</p>\n            ) : loading ? (\n                <p>Loading...</p>\n            ) : error ? (\n                <p className=\"error-message\">{error}</p>\n            ) : (\n                <>\n                    <div className=\"visualization-controls\">\n                        <label htmlFor=\"column-select\">Select a column:</label>\n                        <select id=\"column-select\" value={selectedColumn} onChange={handleChange}>\n                            {columns.map((column) => (\n                                <option key={column} value={column}>{column}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"chart-container\">\n                        <Bar data={chartData} />\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default DataVisualization;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}