{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vuyo\\\\Desktop\\\\Computer Science\\\\Final Project\\\\no_code_deep_learning_web_app\\\\src\\\\components\\\\Preprocessing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { startPreprocessing } from './api'; // Ensure this path matches your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preprocessing() {\n  _s();\n  const [normalize, setNormalize] = useState(false);\n  const [fillMissing, setFillMissing] = useState(false);\n  const [encodeCategorical, setEncodeCategorical] = useState(false);\n  const [processingMessage, setProcessingMessage] = useState('');\n  const handlePreprocessing = async () => {\n    const options = {\n      normalize,\n      fillMissing,\n      encodeCategorical\n    };\n    try {\n      await startPreprocessing(options);\n      setProcessingMessage('Data preprocessing completed successfully.');\n    } catch (error) {\n      setProcessingMessage(`Error during preprocessing: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Preprocessing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-title\",\n      children: \"Data Preprocessing Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: normalize,\n        onChange: () => setNormalize(!normalize)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), \"Normalize Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: fillMissing,\n        onChange: () => setFillMissing(!fillMissing)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \"Fill Missing Values\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: encodeCategorical,\n        onChange: () => setEncodeCategorical(!encodeCategorical)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \"Encode Categorical Variables\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePreprocessing,\n      children: \"Start Preprocessing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), processingMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: processingMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Preprocessing, \"s71mRDJw66nt4KFfRijN6vtwgnE=\");\n_c = Preprocessing;\nexport default Preprocessing;\nvar _c;\n$RefreshReg$(_c, \"Preprocessing\");","map":{"version":3,"names":["React","useState","startPreprocessing","jsxDEV","_jsxDEV","Preprocessing","_s","normalize","setNormalize","fillMissing","setFillMissing","encodeCategorical","setEncodeCategorical","processingMessage","setProcessingMessage","handlePreprocessing","options","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Vuyo/Desktop/Computer Science/Final Project/no_code_deep_learning_web_app/src/components/Preprocessing.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { startPreprocessing } from './api'; // Ensure this path matches your project structure\n\nfunction Preprocessing() {\n    const [normalize, setNormalize] = useState(false);\n    const [fillMissing, setFillMissing] = useState(false);\n    const [encodeCategorical, setEncodeCategorical] = useState(false);\n    const [processingMessage, setProcessingMessage] = useState('');\n\n    const handlePreprocessing = async () => {\n        const options = {\n            normalize,\n            fillMissing,\n            encodeCategorical\n        };\n\n        try {\n            await startPreprocessing(options);\n            setProcessingMessage('Data preprocessing completed successfully.');\n        } catch (error) {\n            setProcessingMessage(`Error during preprocessing: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"Preprocessing\">\n            <div className=\"section-title\">Data Preprocessing Options</div>\n            <label>\n                <input \n                    type=\"checkbox\" \n                    checked={normalize} \n                    onChange={() => setNormalize(!normalize)} />\n                Normalize Data\n            </label>\n            <label>\n                <input \n                    type=\"checkbox\" \n                    checked={fillMissing} \n                    onChange={() => setFillMissing(!fillMissing)} />\n                Fill Missing Values\n            </label>\n            <label>\n                <input \n                    type=\"checkbox\" \n                    checked={encodeCategorical} \n                    onChange={() => setEncodeCategorical(!encodeCategorical)} />\n                Encode Categorical Variables\n            </label>\n            <button onClick={handlePreprocessing}>Start Preprocessing</button>\n            {processingMessage && <p>{processingMessage}</p>}\n        </div>\n    );\n}\n\nexport default Preprocessing;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}